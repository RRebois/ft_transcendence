services:
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
      args:
        - SERVER_IP=$SERVER_IP
    container_name: frontend
    ports:
    - 3000:443
    networks:
      - front
    depends_on:
      web:
        condition: service_healthy
    volumes:
      - ./certs:/etc/nginx/ssl

  web:
    build: Pong
    container_name: django_app
    command: daphne -b 0.0.0.0 -p 8000 configFiles.asgi:application
    expose:
      - 8000
    volumes:
      - static_volume:/home/Pong/web/staticfiles
      - media_volume:/home/Pong/web/media
      - ./Pong/:/home/Pong/web/
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=configFiles.settings
    networks:
      - transcendence
    depends_on:
      - db
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "http://localhost:8000/test"]

  db:
    container_name: postgreSQL
    build: ./postgresql
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - ./.env
    networks:
      - transcendence
    restart: on-failure

  redis:
    image: redis:latest
    container_name: redis
    expose:
      - "6379"
    networks:
      - transcendence
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 50
    restart: always

  nginx:
    build:
      context: ./nginx
      args:
        - SERVER_IP=$SERVER_IP
    container_name: nginx
    volumes:
      - static_volume:/home/Pong/web/staticfiles
      - media_volume:/home/Pong/web/media
      - ./certs:/etc/nginx/ssl
    networks:
      - transcendence
    ports:
      - 8080:80     # <-- Change the http port here
      - 8443:443    # <-- Change the https port here
    depends_on:
      web:
        condition: service_healthy
    restart: on-failure

networks:
  transcendence:
  front:

volumes:
  postgres_data:
  static_volume:
  media_volume:
  app:
  build:
